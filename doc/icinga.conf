object CheckCommand "check-aws-reservation-coverage" {
  import "plugin-check-command"

  command = [ "/usr/local/bin/check-aws-reservation-coverage" ]

  arguments = {
    "-w" = "$aws_reservation_coverage_warning$"
    "-c" = "$aws_reservation_coverage_critical$"
    "-d" = {
      set_if = "$aws_reservation_coverage_percentage$"
    }
    "-ec2" = {
      set_if = "$aws_reservation_coverage_ec2$"
      value = "$aws_reservation_coverage_ec2$"
    }
    "-elasticache" = {
      set_if = "$aws_reservation_coverage_elasticache$"
      value = "$aws_reservation_coverage_elasticache$"
    }
    "-elasticsearch" = {
      set_if = "$aws_reservation_coverage_elasticsearch$"
      value = "$aws_reservation_coverage_elasticsearch$"
    }
    "-rds" = {
      set_if = "$aws_reservation_coverage_rds$"
      value = "$aws_reservation_coverage_rds$"
    }
    "-redshift" = {
      set_if = "$aws_reservation_coverage_redshift$"
      value = "$aws_reservation_coverage_redshift$"
    }
  }
}

apply Service for "check-aws-reservation-coverage" {
  import "generic-service"

  check_command = "check-aws-reservation-coverage"

  vars.aws_reservation_coverage_warning = "60"
  vars.aws_reservation_coverage_critical = "50"
  vars.aws_reservation_coverage_ec2 = "true"
  vars.aws_reservation_coverage_elasticache = "false"
  vars.aws_reservation_coverage_elasticsearch = "false"
  vars.aws_reservation_coverage_rds = "false"
  vars.aws_reservation_coverage_redshift = "false"

  vars += config

  action_url = GrafanaDiskUrl + host.name.replace(".", "_")
}
